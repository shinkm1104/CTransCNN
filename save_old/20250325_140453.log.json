{"env_info": "sys.platform: linux\nPython: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-11.6\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.12.1+cu116\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1+cu116\nOpenCV: 4.6.0\nMMCV: 1.6.2\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMClassification: 0.23.2+316cf59", "seed": 42, "mmcls_version": "0.23.2", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='my_hybird_CTransCNN',\n        arch='tiny',\n        patch_size=16,\n        drop_path_rate=0.1),\n    neck=None,\n    head=dict(\n        type='My_Hybird_Head',\n        num_classes=14,\n        in_channels=[256, 384],\n        init_cfg=None,\n        loss=dict(type='BCE_ASL_Focal', reduction='mean', loss_weight=1),\n        cal_acc=False),\n    init_cfg=[\n        dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.0),\n        dict(type='Constant', layer='LayerNorm', val=1.0, bias=0.0)\n    ])\ndataset_type = 'My_MltilabelData'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Resize',\n        size=(224, 224),\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Resize',\n        size=(224, 224),\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata_root = '/userHome/userhome4/kyoungmin/code/Xray/dataset/'\ndata = dict(\n    samples_per_gpu=64,\n    workers_per_gpu=32,\n    train=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/train_val_list.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_val_labels.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_test_labels.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(\n    interval=1,\n    metric=['mAP', 'CP', 'CR', 'CF1', 'OP', 'OR', 'OF1', 'multi_auc'])\nparamwise_cfg = dict(\n    norm_decay_mult=0.0,\n    bias_decay_mult=0.0,\n    custom_keys=dict({'.cls_token': dict(decay_mult=0.0)}))\noptimizer = dict(\n    type='AdamW',\n    lr=0.001,\n    weight_decay=0.05,\n    eps=1e-08,\n    betas=(0.5, 0.999),\n    paramwise_cfg=dict(\n        norm_decay_mult=0.0,\n        bias_decay_mult=0.0,\n        custom_keys=dict({'.cls_token': dict(decay_mult=0.0)})))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineAnnealing',\n    by_epoch=False,\n    min_lr_ratio=0.01,\n    warmup='linear',\n    warmup_ratio=0.001,\n    warmup_iters=6260,\n    warmup_by_epoch=False)\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = '/userHome/userhome4/kyoungmin/code/Xray/CTransCNN/save'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 42\n", "CLASSES": ["Atelectasis", "Cardiomegaly", "Effusion", "Infiltration", "Mass", "Nodule", "Pneumonia", "Pneumothorax", "Consolidation", "Edema", "Emphysema", "Fibrosis", "Pleural_Thickening", "Hernia"]}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 2e-05, "memory": 17475, "data_time": 0.82273, "loss": 1.00222, "time": 5.81623}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 3e-05, "memory": 17475, "data_time": 1.23024, "loss": 0.74382, "time": 1.81821}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 5e-05, "memory": 17475, "data_time": 0.67141, "loss": 0.63547, "time": 1.27539}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 6e-05, "memory": 17475, "data_time": 0.40371, "loss": 0.6053, "time": 1.00112}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 8e-05, "memory": 17475, "data_time": 0.3968, "loss": 0.59278, "time": 0.99468}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0001, "memory": 17475, "data_time": 0.31625, "loss": 0.60499, "time": 0.93871}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00011, "memory": 17475, "data_time": 0.15023, "loss": 0.58729, "time": 0.73707}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00013, "memory": 17475, "data_time": 0.4371, "loss": 0.6006, "time": 1.02893}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00014, "memory": 17475, "data_time": 0.28866, "loss": 0.59541, "time": 0.89949}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00016, "memory": 17475, "data_time": 0.00239, "loss": 0.59477, "time": 0.61985}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00018, "memory": 17475, "data_time": 0.00233, "loss": 0.57553, "time": 0.61538}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00019, "memory": 17475, "data_time": 0.0095, "loss": 0.59007, "time": 0.614}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00021, "memory": 17475, "data_time": 0.00215, "loss": 0.58314, "time": 0.60454}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00022, "memory": 17475, "data_time": 0.00213, "loss": 0.60689, "time": 0.60074}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00024, "memory": 17475, "data_time": 0.00211, "loss": 0.58594, "time": 0.60251}
{"mode": "val", "epoch": 1, "iter": 176, "lr": 0.00025, "mAP": 9.06652, "CP": 4.98809, "CR": 1.50714, "CF1": 2.31485, "OP": 35.4251, "OR": 4.33061, "OF1": 7.71775, "multi_auc": 65.97539}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00027, "memory": 17475, "data_time": 0.04405, "loss": 0.5883, "time": 0.66109}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00028, "memory": 17475, "data_time": 0.00228, "loss": 0.5848, "time": 0.61356}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0003, "memory": 17475, "data_time": 0.00215, "loss": 0.57837, "time": 0.60382}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.00031, "memory": 17475, "data_time": 0.00241, "loss": 0.60335, "time": 0.60829}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00033, "memory": 17475, "data_time": 0.00224, "loss": 0.58817, "time": 0.60858}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.00035, "memory": 17475, "data_time": 0.00248, "loss": 0.58973, "time": 0.61827}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00036, "memory": 17475, "data_time": 0.00203, "loss": 0.59512, "time": 0.59813}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00038, "memory": 17475, "data_time": 0.00245, "loss": 0.57766, "time": 0.61535}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.00039, "memory": 17475, "data_time": 0.00218, "loss": 0.58999, "time": 0.60408}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00041, "memory": 17475, "data_time": 0.00222, "loss": 0.57867, "time": 0.60798}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00042, "memory": 17475, "data_time": 0.00242, "loss": 0.57343, "time": 0.61696}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00044, "memory": 17475, "data_time": 0.00221, "loss": 0.58955, "time": 0.60485}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.00046, "memory": 17475, "data_time": 0.00224, "loss": 0.57673, "time": 0.60431}
