{"env_info": "sys.platform: linux\nPython: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 3090\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.12.1+cu116\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1+cu116\nOpenCV: 4.6.0\nMMCV: 1.6.2\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMClassification: 0.23.2+316cf59", "seed": 42, "mmcls_version": "0.23.2", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='my_hybird_CTransCNN',\n        arch='tiny',\n        patch_size=16,\n        drop_path_rate=0.1),\n    neck=None,\n    head=dict(\n        type='My_Hybird_Head',\n        num_classes=14,\n        in_channels=[256, 384],\n        init_cfg=None,\n        loss=dict(type='BCE_ASL_Focal', reduction='mean', loss_weight=1),\n        cal_acc=False),\n    init_cfg=[\n        dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.0),\n        dict(type='Constant', layer='LayerNorm', val=1.0, bias=0.0)\n    ])\ndataset_type = 'My_MltilabelData'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Resize',\n        size=(224, 224),\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Resize',\n        size=(224, 224),\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata_root = '/userHome/userhome4/kyoungmin/code/Xray/dataset/'\ndata = dict(\n    samples_per_gpu=64,\n    workers_per_gpu=32,\n    train=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/train_val_list.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/train_val_list.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='My_MltilabelData',\n        data_prefix='/userHome/userhome4/kyoungmin/code/Xray/dataset/',\n        ann_file=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/test_list.txt',\n        classes=\n        '/userHome/userhome4/kyoungmin/code/Xray/dataset/add72_chest14_classes.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(224, 224),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(\n    interval=1,\n    metric=['mAP', 'CP', 'CR', 'CF1', 'OP', 'OR', 'OF1', 'multi_auc'])\nparamwise_cfg = dict(\n    norm_decay_mult=0.0,\n    bias_decay_mult=0.0,\n    custom_keys=dict({'.cls_token': dict(decay_mult=0.0)}))\noptimizer = dict(\n    type='AdamW',\n    lr=0.001,\n    weight_decay=0.05,\n    eps=1e-08,\n    betas=(0.5, 0.999),\n    paramwise_cfg=dict(\n        norm_decay_mult=0.0,\n        bias_decay_mult=0.0,\n        custom_keys=dict({'.cls_token': dict(decay_mult=0.0)})))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineAnnealing',\n    by_epoch=False,\n    min_lr_ratio=0.01,\n    warmup='linear',\n    warmup_ratio=0.001,\n    warmup_iters=6260,\n    warmup_by_epoch=False)\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = '/userHome/userhome4/kyoungmin/code/Xray/CTransCNN/save'\ngpu_ids = [1]\ndevice = 'cuda'\nseed = 42\n", "CLASSES": ["Atelectasis", "Cardiomegaly", "Effusion", "Infiltration", "Mass", "Nodule", "Pneumonia", "Pneumothorax", "Consolidation", "Edema", "Emphysema", "Fibrosis", "Pleural_Thickening", "Hernia"]}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 2e-05, "memory": 17475, "data_time": 0.19493, "loss": 1.00224, "time": 1.01338}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 3e-05, "memory": 17475, "data_time": 0.00554, "loss": 0.74382, "time": 0.57443}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 5e-05, "memory": 17475, "data_time": 0.00753, "loss": 0.63547, "time": 0.57635}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 6e-05, "memory": 17475, "data_time": 0.10194, "loss": 0.6053, "time": 0.67167}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 8e-05, "memory": 17475, "data_time": 0.00164, "loss": 0.5927, "time": 0.57198}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0001, "memory": 17475, "data_time": 0.08397, "loss": 0.60499, "time": 0.65389}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00011, "memory": 17475, "data_time": 0.27413, "loss": 0.58714, "time": 0.84456}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00013, "memory": 17475, "data_time": 0.06867, "loss": 0.60054, "time": 0.63763}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00014, "memory": 17475, "data_time": 0.09856, "loss": 0.59537, "time": 0.6683}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00016, "memory": 17475, "data_time": 0.15039, "loss": 0.5945, "time": 0.72162}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00018, "memory": 17475, "data_time": 0.00166, "loss": 0.57523, "time": 0.57302}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00019, "memory": 17475, "data_time": 0.08111, "loss": 0.59016, "time": 0.65207}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00021, "memory": 17475, "data_time": 0.09561, "loss": 0.58289, "time": 0.66483}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00022, "memory": 17475, "data_time": 0.07571, "loss": 0.607, "time": 0.64636}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00024, "memory": 17475, "data_time": 0.05486, "loss": 0.58613, "time": 0.62623}
{"mode": "val", "epoch": 1, "iter": 1577, "lr": 0.00025, "mAP": 8.73026, "CP": 6.36978, "CR": 0.06246, "CF1": 0.1237, "OP": 46.72897, "OR": 0.20495, "OF1": 0.40811, "multi_auc": 64.71217}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00027, "memory": 17475, "data_time": 0.04619, "loss": 0.58831, "time": 0.63376}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00028, "memory": 17475, "data_time": 0.00171, "loss": 0.58475, "time": 0.58373}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0003, "memory": 17475, "data_time": 0.00172, "loss": 0.57737, "time": 0.58397}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.00032, "memory": 17475, "data_time": 0.00177, "loss": 0.60333, "time": 0.58368}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00033, "memory": 17475, "data_time": 0.0017, "loss": 0.58792, "time": 0.58228}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.00035, "memory": 17475, "data_time": 0.00179, "loss": 0.58932, "time": 0.58647}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00036, "memory": 17475, "data_time": 0.00175, "loss": 0.59523, "time": 0.58428}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00038, "memory": 17475, "data_time": 0.00177, "loss": 0.57766, "time": 0.58415}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.0004, "memory": 17475, "data_time": 0.00178, "loss": 0.58985, "time": 0.58409}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00041, "memory": 17475, "data_time": 0.00181, "loss": 0.57919, "time": 0.58635}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00043, "memory": 17475, "data_time": 0.00181, "loss": 0.57341, "time": 0.58377}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00044, "memory": 17475, "data_time": 0.00181, "loss": 0.59026, "time": 0.58405}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.00046, "memory": 17475, "data_time": 0.00177, "loss": 0.57699, "time": 0.5856}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.00047, "memory": 17475, "data_time": 0.00186, "loss": 0.58175, "time": 0.58803}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00049, "memory": 17475, "data_time": 0.00174, "loss": 0.56101, "time": 0.58392}
{"mode": "val", "epoch": 2, "iter": 1577, "lr": 0.0005, "mAP": 9.29019, "CP": 5.07393, "CR": 1.90327, "CF1": 2.76817, "OP": 28.44835, "OR": 4.37634, "OF1": 7.58573, "multi_auc": 66.33004}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00052, "memory": 17475, "data_time": 0.04391, "loss": 0.58143, "time": 0.63101}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.00053, "memory": 17475, "data_time": 0.00311, "loss": 0.58848, "time": 0.58589}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.00055, "memory": 17475, "data_time": 0.0031, "loss": 0.57913, "time": 0.58795}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00057, "memory": 17475, "data_time": 0.00312, "loss": 0.57682, "time": 0.58553}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00058, "memory": 17475, "data_time": 0.00306, "loss": 0.57774, "time": 0.58712}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.0006, "memory": 17475, "data_time": 0.00314, "loss": 0.58059, "time": 0.58635}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.00061, "memory": 17475, "data_time": 0.00313, "loss": 0.5723, "time": 0.58767}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.00063, "memory": 17475, "data_time": 0.00317, "loss": 0.56828, "time": 0.58537}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.00064, "memory": 17475, "data_time": 0.00328, "loss": 0.56533, "time": 0.58728}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.00066, "memory": 17475, "data_time": 0.0032, "loss": 0.56775, "time": 0.58708}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.00067, "memory": 17475, "data_time": 0.00312, "loss": 0.5887, "time": 0.58351}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.00069, "memory": 17475, "data_time": 0.00312, "loss": 0.57458, "time": 0.58811}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.00071, "memory": 17475, "data_time": 0.00316, "loss": 0.56504, "time": 0.58724}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.00072, "memory": 17475, "data_time": 0.0033, "loss": 0.58059, "time": 0.58732}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.00074, "memory": 17475, "data_time": 0.00334, "loss": 0.56703, "time": 0.58704}
{"mode": "val", "epoch": 3, "iter": 1577, "lr": 0.00075, "mAP": 10.61761, "CP": 7.54622, "CR": 0.89457, "CF1": 1.59952, "OP": 40.8572, "OR": 2.98269, "OF1": 5.55952, "multi_auc": 69.75058}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00076, "memory": 17475, "data_time": 0.04817, "loss": 0.57183, "time": 0.63753}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00078, "memory": 17475, "data_time": 0.00309, "loss": 0.57297, "time": 0.58908}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0008, "memory": 17475, "data_time": 0.0031, "loss": 0.57181, "time": 0.58657}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.00081, "memory": 17475, "data_time": 0.00315, "loss": 0.58643, "time": 0.58945}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.00083, "memory": 17475, "data_time": 0.00315, "loss": 0.56655, "time": 0.58679}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00084, "memory": 17475, "data_time": 0.00318, "loss": 0.5795, "time": 0.58937}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00086, "memory": 17475, "data_time": 0.0033, "loss": 0.56989, "time": 0.58817}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.00087, "memory": 17475, "data_time": 0.00312, "loss": 0.56943, "time": 0.58664}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.00089, "memory": 17475, "data_time": 0.00319, "loss": 0.58445, "time": 0.58881}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.0009, "memory": 17475, "data_time": 0.00316, "loss": 0.56969, "time": 0.5878}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.00092, "memory": 17475, "data_time": 0.00314, "loss": 0.56251, "time": 0.58753}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 0.00093, "memory": 17475, "data_time": 0.00315, "loss": 0.56505, "time": 0.58579}
{"mode": "train", "epoch": 4, "iter": 1300, "lr": 0.00095, "memory": 17475, "data_time": 0.00322, "loss": 0.57363, "time": 0.58736}
{"mode": "train", "epoch": 4, "iter": 1400, "lr": 0.00096, "memory": 17475, "data_time": 0.00322, "loss": 0.56995, "time": 0.58628}
{"mode": "train", "epoch": 4, "iter": 1500, "lr": 0.00098, "memory": 17475, "data_time": 0.00291, "loss": 0.56185, "time": 0.58594}
{"mode": "val", "epoch": 4, "iter": 1577, "lr": 0.00098, "mAP": 11.78434, "CP": 7.9097, "CR": 2.64691, "CF1": 3.96648, "OP": 41.38184, "OR": 7.70881, "OF1": 12.99656, "multi_auc": 72.03807}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00098, "memory": 17475, "data_time": 0.05059, "loss": 0.5695, "time": 0.6371}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00098, "memory": 17475, "data_time": 0.0031, "loss": 0.5732, "time": 0.58797}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.00098, "memory": 17475, "data_time": 0.00308, "loss": 0.58013, "time": 0.58814}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.00098, "memory": 17475, "data_time": 0.00322, "loss": 0.59067, "time": 0.58886}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.00098, "memory": 17475, "data_time": 0.00308, "loss": 0.59697, "time": 0.58986}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.00098, "memory": 17475, "data_time": 0.00303, "loss": 0.57889, "time": 0.58923}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.00098, "memory": 17475, "data_time": 0.00311, "loss": 0.57664, "time": 0.58771}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.00098, "memory": 17475, "data_time": 0.00317, "loss": 0.58821, "time": 0.5933}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00098, "memory": 17475, "data_time": 0.00314, "loss": 0.5816, "time": 0.59034}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.00098, "memory": 17475, "data_time": 0.00317, "loss": 0.57845, "time": 0.58941}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.00098, "memory": 17475, "data_time": 0.00316, "loss": 0.58916, "time": 0.59059}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 0.00098, "memory": 17475, "data_time": 0.00316, "loss": 0.56933, "time": 0.59199}
{"mode": "train", "epoch": 5, "iter": 1300, "lr": 0.00098, "memory": 17475, "data_time": 0.00312, "loss": 0.57115, "time": 0.59043}
{"mode": "train", "epoch": 5, "iter": 1400, "lr": 0.00098, "memory": 17475, "data_time": 0.00313, "loss": 0.57562, "time": 0.5892}
{"mode": "train", "epoch": 5, "iter": 1500, "lr": 0.00098, "memory": 17475, "data_time": 0.00313, "loss": 0.58234, "time": 0.58842}
{"mode": "val", "epoch": 5, "iter": 1577, "lr": 0.00098, "mAP": 12.45648, "CP": 8.98543, "CR": 3.48406, "CF1": 5.02118, "OP": 44.0655, "OR": 9.33884, "OF1": 15.4115, "multi_auc": 72.26803}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00098, "memory": 17475, "data_time": 0.04162, "loss": 0.57776, "time": 0.62933}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.00097, "memory": 17475, "data_time": 0.00312, "loss": 0.58045, "time": 0.58613}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.00097, "memory": 17475, "data_time": 0.00315, "loss": 0.56948, "time": 0.58689}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.00097, "memory": 17475, "data_time": 0.00312, "loss": 0.59322, "time": 0.5876}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.00097, "memory": 17475, "data_time": 0.00282, "loss": 0.57562, "time": 0.58729}
{"mode": "train", "epoch": 6, "iter": 600, "lr": 0.00097, "memory": 17475, "data_time": 0.00288, "loss": 0.57571, "time": 0.58541}
{"mode": "train", "epoch": 6, "iter": 700, "lr": 0.00097, "memory": 17475, "data_time": 0.00285, "loss": 0.56996, "time": 0.58514}
{"mode": "train", "epoch": 6, "iter": 800, "lr": 0.00097, "memory": 17475, "data_time": 0.0028, "loss": 0.58149, "time": 0.5883}
{"mode": "train", "epoch": 6, "iter": 900, "lr": 0.00097, "memory": 17475, "data_time": 0.0028, "loss": 0.57413, "time": 0.58602}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00097, "memory": 17475, "data_time": 0.0029, "loss": 0.57457, "time": 0.58791}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00097, "memory": 17475, "data_time": 0.00287, "loss": 0.55677, "time": 0.58761}
{"mode": "train", "epoch": 6, "iter": 1200, "lr": 0.00097, "memory": 17475, "data_time": 0.00283, "loss": 0.58076, "time": 0.58644}
{"mode": "train", "epoch": 6, "iter": 1300, "lr": 0.00097, "memory": 17475, "data_time": 0.00283, "loss": 0.57143, "time": 0.58706}
{"mode": "train", "epoch": 6, "iter": 1400, "lr": 0.00097, "memory": 17475, "data_time": 0.00289, "loss": 0.58764, "time": 0.58912}
{"mode": "train", "epoch": 6, "iter": 1500, "lr": 0.00097, "memory": 17475, "data_time": 0.00285, "loss": 0.5764, "time": 0.58573}
{"mode": "val", "epoch": 6, "iter": 1577, "lr": 0.00097, "mAP": 12.26199, "CP": 7.76179, "CR": 5.95827, "CF1": 6.74149, "OP": 34.66265, "OR": 14.9517, "OF1": 20.89176, "multi_auc": 72.66602}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00096, "memory": 17475, "data_time": 0.0422, "loss": 0.57232, "time": 0.62997}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.00096, "memory": 17475, "data_time": 0.00277, "loss": 0.58164, "time": 0.58493}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.00096, "memory": 17475, "data_time": 0.00281, "loss": 0.57548, "time": 0.58549}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.00096, "memory": 17475, "data_time": 0.00283, "loss": 0.56946, "time": 0.58759}
{"mode": "train", "epoch": 7, "iter": 500, "lr": 0.00096, "memory": 17475, "data_time": 0.00286, "loss": 0.57987, "time": 0.586}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 0.00096, "memory": 17475, "data_time": 0.00284, "loss": 0.58369, "time": 0.58749}
{"mode": "train", "epoch": 7, "iter": 700, "lr": 0.00096, "memory": 17475, "data_time": 0.0029, "loss": 0.56186, "time": 0.58697}
{"mode": "train", "epoch": 7, "iter": 800, "lr": 0.00096, "memory": 17475, "data_time": 0.00292, "loss": 0.57229, "time": 0.5868}
{"mode": "train", "epoch": 7, "iter": 900, "lr": 0.00096, "memory": 17475, "data_time": 0.00295, "loss": 0.57339, "time": 0.58549}
{"mode": "train", "epoch": 7, "iter": 1000, "lr": 0.00096, "memory": 17475, "data_time": 0.00291, "loss": 0.58438, "time": 0.58695}
{"mode": "train", "epoch": 7, "iter": 1100, "lr": 0.00096, "memory": 17475, "data_time": 0.00289, "loss": 0.57431, "time": 0.58752}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00096, "memory": 17475, "data_time": 0.00285, "loss": 0.57845, "time": 0.58667}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00096, "memory": 17475, "data_time": 0.00286, "loss": 0.57836, "time": 0.58627}
{"mode": "train", "epoch": 7, "iter": 1400, "lr": 0.00095, "memory": 17475, "data_time": 0.00287, "loss": 0.57678, "time": 0.5862}
{"mode": "train", "epoch": 7, "iter": 1500, "lr": 0.00095, "memory": 17475, "data_time": 0.00286, "loss": 0.57864, "time": 0.58637}
